{
  "name": "universal-assistant",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev": "next dev",
    "build": "next build",
    "build:production": "NODE_ENV=production next build",
    "build:analyze": "ANALYZE=true npm run build",
    "start": "next start",
    "lint": "next lint",
    "format": "prettier --write .",
    "format:check": "prettier --check .",
    "typecheck": "tsc --noEmit",
    "test": "jest",
    "test:unit": "jest tests/unit",
    "test:integration": "ts-node tests/run-integration-tests.ts",
    "test:integration:auth": "jest tests/integration/auth-flow.test.ts",
    "test:integration:database": "jest tests/integration/database-state.test.ts",
    "test:integration:sync": "jest tests/integration/cross-store-sync.test.ts",
    "test:integration:realtime": "jest tests/integration/realtime.test.ts",
    "test:integration:e2e": "jest tests/integration/e2e-user-journey.test.ts",
    "test:integration:performance": "jest tests/integration/performance-concurrency.test.ts",
    "test:voice-identification": "jest tests/integration/voice-capture.test.ts tests/integration/audio-processing.test.ts tests/integration/firebase-storage.test.ts",
    "test:voice-identification:integration": "jest tests/integration/voice-capture.test.ts tests/integration/audio-processing.test.ts tests/integration/firebase-storage.test.ts --maxWorkers=2",
    "test:voice-identification:e2e": "jest tests/e2e/voice-identification.e2e.test.ts --testTimeout=60000",
    "test:voice-identification:all": "npm run test:voice-identification:integration && npm run test:voice-identification:e2e",
    "test:voice-identification:coverage": "jest tests/integration/voice-capture.test.ts tests/integration/audio-processing.test.ts tests/integration/firebase-storage.test.ts tests/e2e/voice-identification.e2e.test.ts --coverage --coverageDirectory=coverage/voice-identification",
    "test:voice-identification:runner": "ts-node tests/run-voice-identification-tests.ts",
    "test:stage4": "ts-node tests/run-stage4-tests.ts",
    "test:stage4:integration": "jest tests/integration/stage4-*.test.ts",
    "test:stage4:e2e": "npx playwright test tests/e2e/stage4-*.test.ts",
    "test:stage4:performance": "jest tests/integration/stage4-performance-benchmarks.test.ts",
    "test:firestore-lite": "ts-node tests/firestore-lite-test-runner.ts --all",
    "test:firestore-lite:unit": "ts-node tests/firestore-lite-test-runner.ts --unit",
    "test:firestore-lite:integration": "ts-node tests/firestore-lite-test-runner.ts --integration",
    "test:firestore-lite:e2e": "ts-node tests/firestore-lite-test-runner.ts --e2e",
    "test:firestore-lite:coverage": "ts-node tests/firestore-lite-test-runner.ts --all --coverage",
    "test:e2e:playwright": "npx playwright test",
    "test:e2e:playwright:headed": "npx playwright test --headed",
    "test:e2e:playwright:ui": "npx playwright test --ui",
    "test:e2e:voice-browser": "npx playwright test tests/e2e/voice-identification-browser.test.ts",
    "test:e2e:voice-browser:headed": "npx playwright test tests/e2e/voice-identification-browser.test.ts --headed",
    "test:e2e:voice-browser:runner": "ts-node tests/run-voice-identification-browser-tests.ts",
    "test:e2e:voice-browser:debug": "ts-node tests/run-voice-identification-browser-tests.ts --debug",
    "test:voice-library": "node scripts/run-voice-library-tests.js",
    "test:voice-library:auth": "node scripts/run-voice-library-tests.js --suite=authentication",
    "test:voice-library:permissions": "node scripts/run-voice-library-tests.js --suite=permissions",
    "test:voice-library:components": "node scripts/run-voice-library-tests.js --suite=components",
    "test:voice-library:integration": "node scripts/run-voice-library-tests.js --suite=integration",
    "test:voice-library:e2e": "node scripts/run-voice-library-tests.js --suite=e2e",
    "test:voice-library:performance": "node scripts/run-voice-library-tests.js --suite=performance",
    "test:voice-library:cross-browser": "node scripts/run-voice-library-tests.js --browser=all",
    "test:voice-library:headed": "node scripts/run-voice-library-tests.js --headed",
    "test:voice-library:debug": "node scripts/run-voice-library-tests.js --debug --headed",
    "test:production": "bash scripts/run-production-tests.sh",
    "test:production:unit": "bash scripts/run-production-tests.sh --unit-only",
    "test:production:integration": "bash scripts/run-production-tests.sh --integration-only",
    "test:production:e2e": "bash scripts/run-production-tests.sh --e2e-only",
    "test:production:performance": "bash scripts/run-production-tests.sh --performance-only",
    "test:production:validation": "bash scripts/run-production-tests.sh --validation-only",
    "test:production:full": "bash scripts/run-production-tests.sh --with-services",
    "deploy": "bash scripts/deploy.sh",
    "deploy:staging": "bash scripts/deploy.sh -e staging",
    "deploy:production": "bash scripts/deploy.sh -e production",
    "deploy:dry-run": "bash scripts/deploy.sh -d",
    "health:check": "curl -f http://localhost:3000/api/health",
    "health:detailed": "curl -f http://localhost:3000/api/health?detailed=true",
    "monitoring:start": "ts-node scripts/start-monitoring.ts",
    "performance:benchmark": "ts-node scripts/performance-benchmark.ts",
    "lighthouse": "lighthouse http://localhost:3000 --config-path=lighthouse.config.js --output=html --output-path=reports/lighthouse.html",
    "audit:security": "npm audit --audit-level=moderate",
    "logs:export": "ts-node scripts/export-logs.ts",
    "errors:cleanup": "ts-node scripts/cleanup-errors.ts",
    "test:dashboard": "ts-node tests/run-dashboard-tests.ts",
    "test:dashboard:unit": "jest tests/integration/dashboard-components.test.ts",
    "test:dashboard:e2e": "npx playwright test tests/e2e/dashboard.spec.ts tests/e2e/dashboard-modifications.spec.ts",
    "test:dashboard:e2e:headed": "npx playwright test tests/e2e/dashboard.spec.ts tests/e2e/dashboard-modifications.spec.ts --headed",
    "test:dashboard:performance": "npx playwright test tests/e2e/dashboard.spec.ts --grep 'Performance'",
    "test:dashboard:accessibility": "npx playwright test tests/e2e/dashboard.spec.ts --grep 'Accessibility'",
    "test:dashboard:responsive": "npx playwright test tests/e2e/dashboard.spec.ts --grep 'Responsive'",
    "test:all": "npm run test:unit && npm run test:integration",
    "test:coverage": "jest --coverage",
    "test:meeting-modal": "tests/run-core-flickering-tests.sh",
    "test:meeting-modal:unit": "jest tests/unit/meeting-modal-*.test.tsx",
    "test:meeting-modal:comprehensive": "ts-node tests/run-meeting-modal-tests.ts",
    "test:watch": "jest --watch",
    "test:ci": "jest --ci --coverage --maxWorkers=2",
    "migrate-storage:dry": "npx tsx src/scripts/run-storage-migration.ts --dry",
    "migrate-storage:live": "npx tsx src/scripts/run-storage-migration.ts --live",
    "migrate-db:backup": "npx tsx src/scripts/run-db-migration.ts --backup",
    "migrate-db:dry": "npx tsx src/scripts/run-db-migration.ts",
    "migrate-db:live": "npx tsx src/scripts/run-db-migration.ts --live",
    "migrate-database": "npx tsx src/scripts/migrate-firestore-database.ts",
    "db:reset": "npx tsx src/scripts/clear-and-setup-db.ts",
    "db:clear": "npx tsx src/scripts/clear-firestore-admin.ts",
    "db:setup": "npx tsx src/scripts/setup-new-schema.ts",
    "db:schema": "npx tsx src/scripts/create-schema-only.ts",
    "db:nuclear": "npx tsx src/scripts/nuclear-reset.ts",
    "db:complete": "npx tsx src/scripts/create-complete-schema.ts",
    "db:cleanup": "npx tsx src/scripts/remove-unwanted-collections.ts",
    "populate-database": "npx tsx src/scripts/populate-firestore-database.ts",
    "populate-database:dry-run": "npx tsx src/scripts/populate-firestore-database.ts --dry-run",
    "populate-database:incremental": "npx tsx src/scripts/populate-firestore-database.ts --incremental",
    "verify-database": "npx tsx src/scripts/verify-database-population.ts",
    "test-database-queries": "npx tsx src/scripts/test-database-queries.ts",
    "performance:test": "npx tsx src/scripts/performance-optimization-test.ts",
    "performance:test-no-optimize": "npx tsx src/scripts/performance-optimization-test.ts --no-optimize",
    "performance:baseline": "npx tsx src/scripts/performance-optimization-test.ts --no-optimize --no-report",
    "bundle:analyze": "ANALYZE=true npm run build",
    "security:audit": "node scripts/security-audit.js",
    "security:setup": "bash scripts/setup-security.sh",
    "security:setup-keys": "bash scripts/setup-security.sh generate-keys",
    "security:setup-all": "bash scripts/setup-security.sh setup-all",
    "security:validate": "bash scripts/setup-security.sh validate",
    "security:backup": "node scripts/backup-firestore.js",
    "security:backup:restore": "node scripts/backup-firestore.js restore",
    "security:backup:clean": "node scripts/backup-firestore.js clean",
    "security:encrypt": "npx tsx -e \"import { DataEncryption } from './src/lib/security/encryption'; console.log('Test encryption:', DataEncryption.encrypt('test data'))\"",
    "security:test-rate-limit": "npx tsx -e \"import { RateLimiter } from './src/lib/security/rateLimit'; RateLimiter.checkLimit('test-ip', 60).then(r => console.log('Rate limit result:', r))\"",
    "security:test-audio": "npx tsx -e \"import { AudioSecurity } from './src/lib/security/audioSecurity'; console.log('Audio security initialized')\"",
    "security:monitor": "npx tsx -e \"import { SecurityMonitor } from './src/lib/security/monitoring'; SecurityMonitor.generateSecurityReport().then(r => console.log('Security report generated'))\"",
    "security:full-audit": "npm run security:audit && npm run security:validate",
    "security:check-deps": "npm audit --audit-level moderate",
    "security:fix-deps": "npm audit fix"
  },
  "dependencies": {
    "@anthropic-ai/sdk": "^0.60.0",
    "@deepgram/sdk": "^4.11.2",
    "@next/swc-darwin-arm64": "^15.5.0",
    "@protobufjs/base64": "^1.1.2",
    "@protobufjs/codegen": "^2.0.4",
    "@protobufjs/fetch": "^1.1.0",
    "@protobufjs/float": "^1.0.2",
    "@protobufjs/inquire": "^1.1.0",
    "@protobufjs/path": "^1.1.2",
    "@protobufjs/pool": "^1.1.0",
    "@protobufjs/utf8": "^1.1.0",
    "@radix-ui/react-alert-dialog": "^1.1.15",
    "@radix-ui/react-avatar": "^1.1.10",
    "@radix-ui/react-checkbox": "^1.3.3",
    "@radix-ui/react-dialog": "^1.1.15",
    "@radix-ui/react-dropdown-menu": "^2.1.16",
    "@radix-ui/react-label": "^2.1.7",
    "@radix-ui/react-progress": "^1.1.7",
    "@radix-ui/react-select": "^2.2.6",
    "@radix-ui/react-slider": "^1.3.6",
    "@radix-ui/react-switch": "^1.2.6",
    "@radix-ui/react-tabs": "^1.1.13",
    "@radix-ui/react-tooltip": "^1.2.8",
    "@tensorflow/tfjs": "^4.22.0",
    "@types/dompurify": "^3.0.5",
    "@upstash/redis": "^1.35.3",
    "axios": "^1.11.0",
    "bcryptjs": "^3.0.2",
    "class-variance-authority": "^0.7.1",
    "clsx": "^2.1.1",
    "critters": "^0.0.23",
    "date-fns": "^4.1.0",
    "dompurify": "^3.2.6",
    "dotenv": "^17.2.1",
    "firebase": "^10.7.0",
    "firebase-admin": "^12.0.0",
    "framer-motion": "^12.23.12",
    "helmet": "^8.1.0",
    "immer": "^10.0.3",
    "isomorphic-dompurify": "^2.26.0",
    "lodash": "^4.17.21",
    "lucide-react": "^0.540.0",
    "nanoid": "^5.1.5",
    "next": "^14.2.0",
    "openai": "^5.12.2",
    "protobufjs": "^7.5.4",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "recordrtc": "^5.6.2",
    "tailwind-merge": "^3.3.1",
    "ts-interface-checker": "^1.0.2",
    "undici": "^7.13.0",
    "uuid": "^11.1.0",
    "wavesurfer.js": "^7.10.1",
    "zod": "^3.25.76",
    "zustand": "^4.5.0"
  },
  "devDependencies": {
    "@jest/globals": "^30.0.5",
    "@playwright/test": "^1.54.2",
    "@testing-library/jest-dom": "^6.7.0",
    "@testing-library/react": "^16.3.0",
    "@testing-library/user-event": "^14.6.1",
    "@types/lodash": "^4.17.20",
    "@types/lodash-es": "^4.17.12",
    "@types/node": "^20",
    "@types/react": "^18",
    "@types/react-dom": "^18",
    "@types/uuid": "^10.0.0",
    "autoprefixer": "^10.4.21",
    "compression-webpack-plugin": "^11.1.0",
    "eslint": "^8.57.1",
    "eslint-config-next": "14.2.0",
    "jest": "^30.0.5",
    "jest-environment-jsdom": "^30.0.5",
    "lodash-es": "^4.17.21",
    "postcss": "^8.5.6",
    "prettier": "^3.6.2",
    "stream": "^0.0.3",
    "tailwindcss": "^3.4.17",
    "ts-node": "^10.9.2",
    "typescript": "^5",
    "webpack-bundle-analyzer": "^4.10.2"
  }
}
